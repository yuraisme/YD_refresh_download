from services import LoadZip
from services import Telegramm
import os
import time
from dotenv import load_dotenv
from services import init_logging


logger = init_logging('INFO',name ='main.py')

BASE_URL = ""
PUBLIC_KEY = ""
PATH_TO_EXTRACT = ""
ZIP_FILE = ""

def init_env():
    global BASE_URL
    global PUBLIC_KEY
    global PATH_TO_EXTRACT
    global ZIP_FILE

    try:
        load_dotenv()
        logger.debug('loading .env environment variables')
        ENV = dict(os.environ)
        BASE_URL = ENV["BASE_URL"]
        PUBLIC_KEY = ENV["PUBLIC_KEY"]
        PATH_TO_EXTRACT = ENV["PATH_TO_EXTRACT"]
        ZIP_FILE = ENV["ZIP_FILE"]  # название ZIP файла для временного хранения
        
    except KeyError:
        logger.error("Не загружен .env! или переменная выходим.")
        exit(1)



if __name__ == "__main__":
   
    try:
        init_env()
        
        logger.info("Start main module")
        telegramm = Telegramm()
        
        while True:
            logger.info("Try to load zip from YD")
            zip_file = LoadZip(BASE_URL, PUBLIC_KEY)  # инициализируем
            if not zip_file.load_zip_file(PATH_TO_EXTRACT, ZIP_FILE):
                logger.info('nothing new - sleep & pass')
                time.sleep(150)
                continue
            list_for_send = zip_file.extract_zip()
            if list_for_send:
                print(f"files for send: {list_for_send}")
                logger.info('new files found - Send to telegram')
                telegramm.send_data(PATH_TO_EXTRACT, list_for_send)
            else:
                # print('нет изменений!')
                logger.info('Нет обновления на YD')
            # exit(9)
        # time.sleep(150)
    except Exception as e:
        logger.error("Bad thing happen: %s", e)